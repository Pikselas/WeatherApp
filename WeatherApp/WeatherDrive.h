/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package command-line-arguments */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h>

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */




/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef size_t GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
/*#ifdef _MSC_VER
#include <complex.h>
typedef _Fcomplex GoComplex64;
typedef _Dcomplex GoComplex128;
#else
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;
#endif*/

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif


/* Return type for getWeatherData */
struct getWeatherData_return {
	GoFloat32 r0; /* Temp */
	GoFloat32 r1; /* Feels */
	char* r2; /* Weather */
	GoInt r3; /* WeatherLen */
	GoFloat32 r4; /* Wind */
	GoFloat32 r5; /* Cloud */
	GoFloat32 r6; /* Pressure */
	GoFloat32 r7; /* Humidity */
	GoFloat32 r8; /* Visib */
};
//extern __declspec(dllexport) struct getWeatherData_return getWeatherData(GoString location);

#include <Windows.h>

void * InitWeatherData()
{
	auto h = LoadLibrary("WeatherDrive.dll");
	if (h == NULL)
	{
		MessageBoxA(NULL, "Error loading library", "Weather", MB_OK);
		exit(1);
	}
	return (void*)GetProcAddress(h, "getWeatherData");
}

struct getWeatherData_return (*getWeatherData) (GoString location) = (struct getWeatherData_return(*)(GoString)) InitWeatherData();

#ifdef __cplusplus
}
#endif